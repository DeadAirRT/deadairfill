<?xml version="1.0" encoding="utf-8"?>
<mdscript name="DeadAir_Fillv3" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="md.xsd">
	<cues>
		<cue name="Init">
			<actions>
				<do_if value="not $FillStationGroup?">
					<create_group groupname="$FillStationGroup"/>
				</do_if>
				<set_value name="$CheckTimeAlpha" exact="[player.age + 15s, 30min].max"/>
				<set_value name="$DelayAlpha" exact="2s"/>
				<!-- Incorporating SN menu for customization -->
				<set_value name="md.$DAFillCheckInterval" exact="30"/>
				<set_value name="md.$DAFillMaxTSWarePercent" exact="90.0"/>
				<set_value name="md.$DAFillMaxTSWarePercentAfter" exact="75.0"/>
				<set_value name="md.$DAFillMinTSWarePercent" exact="5.0"/>
				<set_value name="md.$DAFillMinTSWarePercentAfter" exact="10.0"/>
				<set_value name="md.$DAFillMinSYWarePercent" exact="5.0"/>
				<set_value name="md.$DAFillMinSYWarePercentAfter" exact="10.0"/>
				<set_value name="$DAFillDebugChance" exact="false"/>
			</actions>
			<cues>
				<cue name="Start" instantiate="false" checktime="$CheckTimeAlpha">
					<actions>
						<signal_cue_instantly cue="FindFillStations"/>
						<set_value name="$DAFillLastTimeFired" exact="player.age"/>
					</actions>
				</cue>
				<cue name="Timer" instantiate="true" checkinterval="5min" checktime="$CheckTimeAlpha + 5min">
					<conditions>
						<check_value value="player.age ge ($DAFillLastTimeFired + (md.$DAFillCheckInterval)min)"/>
					</conditions>
					<actions>
						<set_value name="$DAFillLastTimeFired" exact="player.age"/>
						<debug_text text="'MOD: DeadAirFillv3 -- %1 -- Signaling FindFillStations -- Next time %2 -- Interval %3'.[player.age,($DAFillLastTimeFired + (md.$DAFillCheckInterval)min),(md.$DAFillCheckInterval)min]" context="false" filter="scripts" chance="if @$DAFillDebugChance then ($DAFillDebugChance * 100) else 0"/>
						<signal_cue_instantly cue="FindFillStations"/>
					</actions>
				</cue>
				<cue name="FindFillStations" instantiate="true">
					<conditions>
						<event_cue_signalled/>
					</conditions>
					<actions>
						<!-- DEBUG CHANCE VALUE -->
						<set_value name="$DAFillDebugChance" exact="false"/>
						<!-- FIND THE STATIONS -->
						<find_station groupname="$FillStationGroup" append="true" multiple="true" space="player.galaxy" functional="true" tradestation="true">
							<match owner="faction.player" negate="true"/>
						</find_station>
						<find_station groupname="$FillStationGroup" append="true" multiple="true" space="player.galaxy" functional="true" shipyard="true">
							<match owner="faction.player" negate="true"/>
						</find_station>
						<find_station groupname="$FillStationGroup" append="true" multiple="true" space="player.galaxy" functional="true" wharf="true">
							<match owner="faction.player" negate="true"/>
						</find_station>
						<find_station groupname="$FillStationGroup" append="true" multiple="true" space="player.galaxy" functional="true" canequipships="true">
							<match_content class="class.buildmodule"/>
							<match owner="faction.player" negate="true"/>
						</find_station>
						<find_station groupname="$FillStationGroup" append="true" multiple="true" space="player.galaxy" functional="true" piratebase="true">
							<match owner="faction.player" negate="true"/>
						</find_station>
						<!-- NOTIFY OF STEP -->
						<debug_text text="'MOD: DeadAirFillv3 -- %1 -- Completed station search and found %2 stations'.[player.age,$FillStationGroup.count]" context="false" filter="scripts" chance="if @$DAFillDebugChance then ($DAFillDebugChance * 100) else 0"/>
					</actions>
					<cues>
						<cue name="ProcessWaresLoop">
							<delay exact="$DelayAlpha"/>
							<actions>
								<do_if value="$FillStationGroup.count gt 0">
									<set_value name="$Station" exact="$FillStationGroup.{1}"/>
									<debug_text text="'MOD: DeadAirFillv3 -- %1 -- Processing %2 in sector %3'.[player.age,$Station.knownname,$Station.sector.knownname]" context="false" filter="scripts" chance="if @$DAFillDebugChance then ($DAFillDebugChance * 100) else 0"/>
									<include_actions ref="ProcessWares"/>
									<remove_from_group group="$FillStationGroup" object="$Station"/>
									<reset_cue cue="this"/>
								</do_if>
								<do_else>
									<remove_value name="$Station"/>
								</do_else>
							</actions>
						</cue>
					</cues>
				</cue>
				<library name="ProcessWares">
					<actions>
						<do_if value="$Station.exists">
							<set_value name="$_SingleLog_1" exact="0"/>
							<do_if value="$Station.istradestation or $Station.ispiratebase">
								<do_all exact="$Station.tradewares.list.count" counter="$j">
									<set_value name="$ware" exact="$Station.tradewares.list.{$j}"/>
									<set_value name="$waresAmount" exact="$Station.cargo.{$ware}.count"/>
									<set_value name="$maxWaresAmount" exact="$Station.cargo.{$ware}.target"/>
									<set_value name="$addWaresAmount" exact="0"/>
									<set_value name="$removeWaresAmount" exact="0"/>
									<do_if value="(md.$DAFillMaxTSWarePercent ge md.$DAFillMaxTSWarePercentAfter)">
										<do_if value="($waresAmount gt $maxWaresAmount * ((md.$DAFillMaxTSWarePercent)f / 100)f)">
											<set_value name="$removeWaresAmount" exact="($waresAmount - ($maxWaresAmount * ((md.$DAFillMaxTSWarePercentAfter)f / 100)f))i"/>
										</do_if>
									</do_if>
									<do_if value="(md.$DAFillMinTSWarePercent le md.$DAFillMinTSWarePercentAfter)">
										<do_if value="$waresAmount lt $maxWaresAmount * ((md.$DAFillMinTSWarePercent)f / 100)f">
											<set_value name="$addWaresAmount" exact="(($maxWaresAmount * ((md.$DAFillMinTSWarePercentAfter)f / 100)f) - $waresAmount)i"/>
										</do_if>
									</do_if>
									<do_if value="$addWaresAmount gt 0 or $removeWaresAmount gt 0">
										<do_if value="$_SingleLog_1 == 0">
											<!-- single log -->
											<debug_to_file name="$Station.knownname" directory="'DeadAir_Fill'" text="' '" output="false" append="true" chance="if @$DAFillDebugChance then ($DAFillDebugChance * 100) else 0"/>
											<debug_to_file name="$Station.knownname" directory="'DeadAir_Fill'" text="'[%2] -- Processing TradeStation Cargo of %1'.[$Station.knownname, player.systemtime.{'%Y-%m-%d %H:%M:%S'}]" output="false" append="true" chance="if @$DAFillDebugChance then ($DAFillDebugChance * 100) else 0"/>
											<set_value name="$_SingleLog_1" exact="1"/>
										</do_if>
										<do_if value="$addWaresAmount gt 0">
											<debug_to_file name="$Station.knownname" directory="'DeadAir_Fill'" text="'Adding %2 units of %1'.[$ware.name, $addWaresAmount]" output="false" append="true" chance="if @$DAFillDebugChance then ($DAFillDebugChance * 100) else 0"/>
											<add_cargo object="$Station" ware="$ware" exact="$addWaresAmount"/>
											<debug_text text="'MOD: DeadAirFillv3 -- %1 -- %2 (%3) -- Adding %4 units of %5'.[player.age,$Station.knownname,$Station.sector.knownname, $addWaresAmount, $ware.name]" context="false" filter="scripts" chance="if @$DAFillDebugChance then ($DAFillDebugChance * 100) else 0"/>
										</do_if>
										<do_if value="$removeWaresAmount gt 0">
											<debug_to_file name="$Station.knownname" directory="'DeadAir_Fill'" text="'Removing %2 units of %1'.[$ware.name, $removeWaresAmount]" output="false" append="true" chance="if @$DAFillDebugChance then ($DAFillDebugChance * 100) else 0"/>
											<remove_cargo object="$Station" ware="$ware" exact="$removeWaresAmount"/>
											<debug_text text="'MOD: DeadAirFillv3 -- %1 -- %2 (%3) -- Removing %4 units of %5'.[player.age,$Station.knownname,$Station.sector.knownname, $removeWaresAmount, $ware.name]" context="false" filter="scripts" chance="if @$DAFillDebugChance then ($DAFillDebugChance * 100) else 0"/>
											<include_actions ref="AddShipMod"/>
										</do_if>
									</do_if>
								</do_all>
							</do_if>
							<do_if value="$Station.canbuildships or $Station.isequipmentdock">
								<do_all exact="$Station.resources.list.count" counter="$k">
									<set_value name="$ware" exact="$Station.resources.list.{$k}"/>
									<set_value name="$waresAmount" exact="$Station.cargo.{$ware}.count"/>
									<set_value name="$maxWaresAmount" exact="$Station.cargo.{$ware}.target"/>
									<set_value name="$addWaresAmount" exact="0"/>
									<set_value name="$removeWaresAmount" exact="0"/>
									<do_if value="$waresAmount gt $maxWaresAmount">
										<set_value name="$removeWaresAmount" exact="($waresAmount - $maxWaresAmount)i"/>
									</do_if>
									<do_if value="(md.$DAFillMinSYWarePercent le md.$DAFillMinSYWarePercentAfter)">
										<do_if value="$waresAmount lt $maxWaresAmount * ((md.$DAFillMinSYWarePercent)f / 100)f">
											<set_value name="$addWaresAmount" exact="(($maxWaresAmount * ((md.$DAFillMinSYWarePercentAfter)f / 100)f) - $waresAmount)i"/>
										</do_if>
									</do_if>
									<do_if value="$addWaresAmount gt 0 or $removeWaresAmount gt 0">
										<do_if value="$_SingleLog_1 == 0">
											<!-- single log -->
											<debug_to_file name="$Station.knownname" directory="'DeadAir_Fill'" text="' '" output="false" append="true" chance="if @$DAFillDebugChance then ($DAFillDebugChance * 100) else 0"/>
											<debug_to_file name="$Station.knownname" directory="'DeadAir_Fill'" text="'[%2] -- Processing Wharf/Shipyard Cargo of %1'.[$Station.knownname, player.systemtime.{'%Y-%m-%d %H:%M:%S'}]" output="false" append="true" chance="if @$DAFillDebugChance then ($DAFillDebugChance * 100) else 0"/>
											<set_value name="$_SingleLog_1" exact="1"/>
										</do_if>
										<do_if value="$addWaresAmount gt 0">
											<debug_to_file name="$Station.knownname" directory="'DeadAir_Fill'" text="'Adding %2 units of %1'.[$ware.name, $addWaresAmount]" output="false" append="true" chance="if @$DAFillDebugChance then ($DAFillDebugChance * 100) else 0"/>
											<add_cargo object="$Station" ware="$ware" exact="$addWaresAmount"/>
											<debug_text text="'MOD: DeadAirFillv3 -- %1 -- %2 (%3) -- Adding %4 units of %5'.[player.age,$Station.knownname,$Station.sector.knownname, $addWaresAmount, $ware.name]" context="false" filter="scripts" chance="if @$DAFillDebugChance then ($DAFillDebugChance * 100) else 0"/>
										</do_if>
										<do_elseif value="$removeWaresAmount gt 0">
											<debug_to_file name="$Station.knownname" directory="'DeadAir_Fill'" text="'Removing %2 units of %1'.[$ware.name, $removeWaresAmount]" output="false" append="true" chance="if @$DAFillDebugChance then ($DAFillDebugChance * 100) else 0"/>
											<remove_cargo object="$Station" ware="$ware" exact="$removeWaresAmount"/>
											<debug_text text="'MOD: DeadAirFillv3 -- %1 -- %2 (%3) -- Removing %4 units of %5'.[player.age,$Station.knownname,$Station.sector.knownname, $removeWaresAmount, $ware.name]" context="false" filter="scripts" chance="if @$DAFillDebugChance then ($DAFillDebugChance * 100) else 0"/>
										</do_elseif>
									</do_if>
								</do_all>
							</do_if>
							<remove_value name="$ware"/>
							<remove_value name="$waresAmount"/>
							<remove_value name="$maxWaresAmount"/>
							<remove_value name="$addWaresAmount"/>
							<remove_value name="$removeWaresAmount"/>
						</do_if>
					</actions>
				</library>
				<library name="AddShipMod">
					<actions>
						<!-- Faction will get a mod for 1 combat and 1 economy ship each time -->
						<set_value name="$Owner" exact="$Station.trueowner"/>
						<set_value name="$HullMod" exact="[ware.mod_ship_mass_AI,ware.mod_ship_mass_AI_mk2,ware.mod_ship_mass_AI_mk1].random"/>
						<set_value name="$ShieldMod" exact="[ware.mod_shield_capacity_AI,ware.mod_shield_capacity_AI_mk2,ware.mod_shield_capacity_AI_mk1].random"/>
						<set_value name="$EngineMod" exact="[ware.mod_engine_forwardthrust_AI,ware.mod_engine_forwardthrust_AI_mk2,ware.mod_engine_forwardthrust_AI_mk1].random"/>
						<set_value name="$WeaponMod" exact="[ware.mod_weapon_damage_AI,ware.mod_weapon_damage_AI_mk2,ware.mod_weapon_damage_AI_mk1].random"/>
						<set_value name="$MiningMod" exact="[ware.mod_weapon_mining_AI,ware.mod_weapon_mining_AI_mk2,ware.mod_weapon_mining_AI_mk1].random"/>
						<set_value name="$MissileMod" exact="[ware.mod_weapon_missile_AI,ware.mod_weapon_missile_AI_mk2,ware.mod_weapon_missile_AI_mk1].random"/>
						<set_value name="$MiningWeapons" exact="[@macro.turret_arg_l_mining_01_mk1_macro,@macro.turret_arg_m_mining_01_mk1_macro,@macro.turret_arg_m_mining_02_mk1_macro,@macro.turret_par_l_mining_01_mk1_macro,
							@macro.turret_par_m_mining_01_mk1_macro,@macro.turret_par_m_mining_02_mk1_macro,@macro.turret_tel_l_mining_01_mk1_macro,@macro.turret_tel_m_mining_01_mk1_macro,@macro.turret_tel_m_mining_02_mk1_macro,
							@macro.weapon_gen_m_mining_01_mk1_macro,@macro.weapon_gen_m_mining_01_mk2_macro,@macro.weapon_gen_s_mining_01_mk1_macro,@macro.weapon_gen_s_mining_01_mk2_macro,@macro.weapon_xen_m_mining_01_mk1_macro,
							@macro.turret_spl_l_mining_01_mk1_macro,@macro.turret_spl_m_mining_01_mk1_macro,@macro.turret_spl_m_mining_02_mk1_macro,@macro.turret_ter_l_mining_01_mk1_macro,@macro.turret_ter_m_mining_01_mk1_macro,
							@macro.turret_ter_m_mining_02_mk1_macro]"/>
						<set_value name="$BrokenWeapons" exact="[macro.weapon_arg_l_destroyer_01_mk1_macro,macro.weapon_par_l_destroyer_01_mk1_macro,macro.weapon_tel_l_destroyer_01_mk1_macro,macro.weapon_spl_l_destroyer_01_mk1_macro,macro.weapon_atf_xl_battleship_01_mk1_macro,macro.weapon_ter_l_destroyer_01_mk1_macro,
							@macro.weapon_spl_l_shell_macro,@macro.weapon_arg_l_ionproj_macro,@macro.weapon_arg_l_fa_centaur_macro,@macro.weapon_arg_l_parray_centaur_macro,@macro.weapon_arg_l_parray_macro,
							@macro.weapon_par_l_tribeam_macro,@macro.weapon_par_l_parray_macro,@macro.weapon_tel_l_posbeam_macro,@macro.weapon_tel_l_parray_macro,@macro.weapon_gen_m_isr_centaur_macro,@macro.weapon_gen_m_laser_centaur_macro,
							@macro.weapon_ter_l_graviton_macro,@macro.turret_spl_multilauncher_macro,@macro.weapon_dal_l_macro,@macro.weapon_dal_xl_macro,@macro.weapon_dam_l_multifrequency_macro,@macro.weapon_dam_l_radio_macro,@macro.weapon_dam_l_standard_macro,
							@macro.weapon_dam_xl_macro,@macro.weapon_dga_l_antimatter_macro,@macro.weapon_dga_l_iron_macro,@macro.weapon_dga_l_lead_macro,@macro.weapon_dga_xl_macro,@macro.weapon_dmi_l_fusion_macro,@macro.weapon_dmi_l_nuclear_macro,@macro.weapon_dmi_l_titanium_macro,
							@macro.weapon_dmi_xl_macro]"/>
						<find_ship_by_true_owner name="$MilShip" multiple="false" space="player.galaxy" validjobship="true" faction="$Owner" functional="true" docked="false">
							<match primarypurpose="purpose.fight"/>
							<match class="[class.ship_l, class.ship_xl]"/>
							<match_any_equipment_mod negate="true"/>
						</find_ship_by_true_owner>
						<find_ship_by_true_owner name="$EcoShip" multiple="false" space="player.galaxy" validjobship="true" faction="$Owner" functional="true" docked="false">
							<match_any>
								<match primarypurpose="purpose.trade"/>
								<match primarypurpose="purpose.build"/>
								<match primarypurpose="purpose.mine"/>
							</match_any>
							<match class="[class.ship_l, class.ship_xl]"/>
							<match_any_equipment_mod negate="true"/>
						</find_ship_by_true_owner>
						<do_if value="$MilShip.exists">
							<set_value name="$WeaponGroupTags" exact="[]"/>
							<set_value name="$WeaponMacros" exact="[]"/>
							<set_value name="$ShieldGroupTags" exact="[]"/>
							<set_value name="$ShieldMacros" exact="[]"/>
							<add_equipment_mods object="$MilShip">
								<engine ware="$EngineMod"/>
							</add_equipment_mods>
							<add_equipment_mods object="$MilShip">
								<ship ware="$HullMod"/>
							</add_equipment_mods>
							<!-- 20220517 changed operational to all; result:-->
							<!-- 20220517 added grouptag filter to to macro adding portion; result:only L weapons and certain VRO error-->
							<!-- 20220517 added filter for hasweaponmod == null; result:clean debug except for VRO group 11-->
							<!-- 20220517 added check for shield mod installed on the object's main hull shield group; result:-->
							<do_for_each in="$MilShip.shields.all.list" name="$Shield">
								<do_if value="($Shield.grouptag) and (not $ShieldGroupTags.indexof.{$Shield.grouptag})">
									<add_equipment_mods object="$MilShip">
										<shield ware="$ShieldMod" context="'..'" group="$Shield.grouptag"/>
									</add_equipment_mods>
									<append_to_list name="$ShieldGroupTags" exact="$Shield.grouptag"/>
								</do_if>
							</do_for_each>
							<do_if value="not $MilShip.hasshieldmod">
								<add_equipment_mods object="$MilShip">
									<shield ware="$ShieldMod"/>
								</add_equipment_mods>
							</do_if>
							<do_for_each in="$MilShip.weapons.all.list" name="$Weapon">
								<do_if value="($Weapon.grouptag) and (not $WeaponGroupTags.indexof.{$Weapon.grouptag})">
									<do_if value="$Weapon.isclass.[class.missileturret,class.missilelauncher]">
										<add_equipment_mods object="$MilShip">
											<weapon ware="$MissileMod" context="'..'" group="$Weapon.grouptag"/>
										</add_equipment_mods>
									</do_if>
									<do_elseif value="$MiningWeapons.indexof.{$Weapon.macro}">
										<add_equipment_mods object="$MilShip">
											<weapon ware="$MiningMod" context="'..'" group="$Weapon.grouptag"/>
										</add_equipment_mods>
									</do_elseif>
									<do_else>
										<add_equipment_mods object="$MilShip">
											<weapon ware="$WeaponMod" context="'..'" group="$Weapon.grouptag"/>
										</add_equipment_mods>
									</do_else>
									<append_to_list name="$WeaponGroupTags" exact="$Weapon.grouptag"/>
								</do_if>
								<do_elseif value="($Weapon.macro) and (not $WeaponMacros.indexof.{$Weapon.macro}) and (not $WeaponGroupTags.indexof.{$Weapon.grouptag})">
									<do_if value="$Weapon.isclass.[class.missileturret,class.missilelauncher]">
										<add_equipment_mods object="$MilShip">
											<weapon ware="$MissileMod" macro="$Weapon.macro"/>
										</add_equipment_mods>
									</do_if>
									<do_elseif value="$MiningWeapons.indexof.{$Weapon.macro}">
										<add_equipment_mods object="$MilShip">
											<weapon ware="$MiningMod" macro="$Weapon.macro"/>
										</add_equipment_mods>
									</do_elseif>
									<do_elseif value="not (@$Weapon.hasweaponmod == null)">
										<add_equipment_mods object="$MilShip">
											<weapon ware="$WeaponMod" macro="$Weapon.macro"/>
										</add_equipment_mods>
									</do_elseif>
									<do_else>
										<debug_text text="'MOD: DAFILL -- BROKEN WEAPON -- WEAPON: %1 ; $WeaponMacros.indexof.{$Weapon.macro}: %2 ; GROUPTAG: %3 ; HASWEAPONMOD: %4 ; HASWEAPONMOD.{Weapon} %5'.[@$Weapon.macro,@$WeaponMacros.indexof.{$Weapon.macro},@$Weapon.grouptag,@$Weapon.hasweaponmod,@$Weapon.hasweaponmod.{$WeaponMod}]" context="false" filter="scripts" chance="if @$DAFillDebugChance then ($DAFillDebugChance * 100) else 0"/>
									</do_else>
									<append_to_list name="$WeaponMacros" exact="$Weapon.macro"/>
								</do_elseif>
							</do_for_each>
							<debug_text text="'MOD: DAFILL -- OWNER: %1 ; IDCODE: %2 ; CLASS: %3 ; TYPENAME: %4'.[$MilShip.owner,$MilShip.idcode,$MilShip.class,$MilShip.typename]" output="false" context="false" filter="scripts" chance="if @$DAFillDebugChance then ($DAFillDebugChance * 100) else 0"/>
							<remove_value name="$MilShip"/>
							<remove_value name="$Shield"/>
							<remove_value name="$Weapon"/>
						</do_if>
						<do_if value="$EcoShip.exists">
							<set_value name="$WeaponGroupTags" exact="[]"/>
							<set_value name="$WeaponMacros" exact="[]"/>
							<set_value name="$ShieldGroupTags" exact="[]"/>
							<set_value name="$ShieldMacros" exact="[]"/>
							<add_equipment_mods object="$EcoShip">
								<engine ware="$EngineMod"/>
							</add_equipment_mods>
							<add_equipment_mods object="$EcoShip">
								<ship ware="$HullMod"/>
							</add_equipment_mods>
							<do_for_each in="$EcoShip.shields.all.list" name="$Shield">
								<do_if value="($Shield.grouptag) and (not $ShieldGroupTags.indexof.{$Shield.grouptag})">
									<add_equipment_mods object="$EcoShip">
										<shield ware="$ShieldMod" context="'..'" group="$Shield.grouptag"/>
									</add_equipment_mods>
									<append_to_list name="$ShieldGroupTags" exact="$Shield.grouptag"/>
								</do_if>
							</do_for_each>
							<do_if value="not $EcoShip.hasshieldmod">
								<add_equipment_mods object="$EcoShip">
									<shield ware="$ShieldMod"/>
								</add_equipment_mods>
							</do_if>
							<do_for_each in="$EcoShip.weapons.all.list" name="$Weapon">
								<do_if value="($Weapon.grouptag) and (not $WeaponGroupTags.indexof.{$Weapon.grouptag})">
									<do_if value="$Weapon.isclass.[class.missileturret,class.missilelauncher]">
										<add_equipment_mods object="$EcoShip">
											<weapon ware="$MissileMod" context="'..'" group="$Weapon.grouptag"/>
										</add_equipment_mods>
									</do_if>
									<do_elseif value="$MiningWeapons.indexof.{$Weapon.macro}">
										<add_equipment_mods object="$EcoShip">
											<weapon ware="$MiningMod" context="'..'" group="$Weapon.grouptag"/>
										</add_equipment_mods>
									</do_elseif>
									<do_else>
										<add_equipment_mods object="$EcoShip">
											<weapon ware="$WeaponMod" context="'..'" group="$Weapon.grouptag"/>
										</add_equipment_mods>
									</do_else>
									<append_to_list name="$WeaponGroupTags" exact="$Weapon.grouptag"/>
								</do_if>
								<do_elseif value="($Weapon.macro) and (not $WeaponMacros.indexof.{$Weapon.macro}) and (not $WeaponGroupTags.indexof.{$Weapon.grouptag})">
									<do_if value="$Weapon.isclass.[class.missileturret,class.missilelauncher]">
										<add_equipment_mods object="$EcoShip">
											<weapon ware="$MissileMod" macro="$Weapon.macro"/>
										</add_equipment_mods>
									</do_if>
									<do_elseif value="$MiningWeapons.indexof.{$Weapon.macro}">
										<add_equipment_mods object="$EcoShip">
											<weapon ware="$MiningMod" macro="$Weapon.macro"/>
										</add_equipment_mods>
									</do_elseif>
									<do_elseif value="not (@$Weapon.hasweaponmod == null)">
										<add_equipment_mods object="$EcoShip">
											<weapon ware="$WeaponMod" macro="$Weapon.macro"/>
										</add_equipment_mods>
									</do_elseif>
									<do_else>
										<debug_text text="'MOD: DAFILL -- BROKEN WEAPON -- WEAPON: %1 ; $WeaponMacros.indexof.{$Weapon.macro}: %2 ; GROUPTAG: %3 ; HASWEAPONMOD: %4 ; HASWEAPONMOD.{Weapon} %5'.[@$Weapon.macro,@$WeaponMacros.indexof.{$Weapon.macro},@$Weapon.grouptag,@$Weapon.hasweaponmod,@$Weapon.hasweaponmod.{$WeaponMod}]" context="false" filter="scripts" chance="if @$DAFillDebugChance then ($DAFillDebugChance * 100) else 0"/>
									</do_else>
									<append_to_list name="$WeaponMacros" exact="$Weapon.macro"/>
								</do_elseif>
							</do_for_each>
							<debug_text text="'MOD: DAFILL -- OWNER: %1 ; IDCODE: %2 ; CLASS: %3 ; TYPENAME: %4'.[$EcoShip.owner,$EcoShip.idcode,$EcoShip.class,$EcoShip.typename]" output="false" context="false" filter="scripts" chance="if @$DAFillDebugChance then ($DAFillDebugChance * 100) else 0"/>
							<remove_value name="$EcoShip"/>
							<remove_value name="$Shield"/>
							<remove_value name="$Weapon"/>
						</do_if>
						<remove_value name="$Owner"/>
					</actions>
				</library>
				<cue name="Register_Options_Menu" instantiate="true">
					<conditions>
						<event_cue_signalled cue="md.Simple_Menu_API.Reloaded"/>
					</conditions>
					<actions>
						<signal_cue_instantly cue="md.Simple_Menu_API.Register_Options_Menu" param="table[$id = 'deadairfill_options_menu', $columns = 4, $title   = {33232472,101}, $onOpen  = Main_Menu ]"/>
					</actions>
				</cue>
				<cue name="Main_Menu" instantiate="true">
					<conditions>
						<event_cue_signalled/>
					</conditions>
					<actions>
						<!--
						<set_value name="md.$DAFillCheckInterval" exact="30" />
						<set_value name="md.$DAFillMaxTSWarePercent" exact="90.0" />
						<set_value name="md.$DAFillMaxTSWarePercentAfter" exact="65.0" />
						<set_value name="md.$DAFillMinTSWarePercent" exact="5.0" />
						<set_value name="md.$DAFillMinTSWarePercentAfter" exact="15.0" />
						<set_value name="md.$DAFillMinSYWarePercent" exact="5.0" />
						<set_value name="md.$DAFillMinSYWarePercentAfter" exact="10.0" />
						-->
						<signal_cue_instantly cue="md.Simple_Menu_API.Add_Row"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[
							$col=1,
							$colSpan=2,
							$mouseOverText= {33232472,102},
							$text = {33232472,103},
							]"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Make_Slider" param="table[
							$col=3,
							$colSpan=2,
							$onSliderCellConfirm=DAFillCheckInterval,
							$min=0,
							$minSelect=5,
							$max=120,
							$maxSelect=120,
							$exceedMaxValue=false,
							$start=md.$DAFillCheckInterval,
							$step=5,
							$suffix='min',
							]"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Add_Row"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[
							$col=1,
							$colSpan=2,
							$mouseOverText= {33232472,104},
							$text = {33232472,105},
							]"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Make_Slider" param="table[
							$col=3,
							$colSpan=2,
							$onSliderCellConfirm=DAFillMaxTSWarePercent,
							$min=0.0,
							$minSelect=5.0,
							$max=100.0,
							$maxSelect=100.0,
							$exceedMaxValue=false,
							$start=md.$DAFillMaxTSWarePercent,
							$step=5.0,
							$suffix='%',
							]"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Add_Row"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[
							$col=1,
							$colSpan=2,
							$mouseOverText= {33232472,106},
							$text = {33232472,107},
							]"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Make_Slider" param="table[
							$col=3,
							$colSpan=2,
							$onSliderCellConfirm=DAFillMaxTSWarePercentAfter,
							$min=0.0,
							$minSelect=0.0,
							$max=100.0,
							$maxSelect=100.0,
							$exceedMaxValue=false,
							$start=md.$DAFillMaxTSWarePercentAfter,
							$step=5.0,
							$suffix='%',
							]"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Add_Row"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[
							$col=1,
							$colSpan=2,
							$mouseOverText= {33232472,108},
							$text = {33232472,109},
							]"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Make_Slider" param="table[
							$col=3,
							$colSpan=2,
							$onSliderCellConfirm=DAFillMinTSWarePercent,
							$min=0.0,
							$minSelect=0.0,
							$max=100.0,
							$maxSelect=100.0,
							$exceedMaxValue=false,
							$start=md.$DAFillMinTSWarePercent,
							$step=5.0,
							$suffix='%',
							]"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Add_Row"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[
							$col=1,
							$colSpan=2,
							$mouseOverText= {33232472,110},
							$text = {33232472,111},
							]"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Make_Slider" param="table[
							$col=3,
							$colSpan=2,
							$onSliderCellConfirm=DAFillMinTSWarePercentAfter,
							$min=0.0,
							$minSelect=0.0,
							$max=100.0,
							$maxSelect=100.0,
							$exceedMaxValue=false,
							$start=md.$DAFillMinTSWarePercentAfter,
							$step=5.0,
							$suffix='%',
							]"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Add_Row"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[
							$col=1,
							$colSpan=2,
							$mouseOverText= {33232472,112},
							$text = {33232472,113},
							]"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Make_Slider" param="table[
							$col=3,
							$colSpan=2,
							$onSliderCellConfirm=DAFillMinSYWarePercent,
							$min=0.0,
							$minSelect=0.0,
							$max=100.0,
							$maxSelect=100.0,
							$exceedMaxValue=false,
							$start=md.$DAFillMinSYWarePercent,
							$step=5.0,
							$suffix='%',
							]"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Add_Row"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Make_Text" param="table[
							$col=1,
							$colSpan=2,
							$mouseOverText= {33232472,114},
							$text = {33232472,115},
							]"/>
						<signal_cue_instantly cue="md.Simple_Menu_API.Make_Slider" param="table[
							$col=3,
							$colSpan=2,
							$onSliderCellConfirm=DAFillMinSYWarePercentAfter,
							$min=0.0,
							$minSelect=0.0,
							$max=100.0,
							$maxSelect=100.0,
							$exceedMaxValue=false,
							$start=md.$DAFillMinSYWarePercentAfter,
							$step=5.0,
							$suffix='%',
							]"/>
					</actions>
				</cue>
				<cue name="DAFillCheckInterval" instantiate="true">
					<conditions>
						<event_cue_signalled/>
					</conditions>
					<actions>
						<set_value name="md.$DAFillCheckInterval" exact="event.param.$value"/>
						<debug_text text="'MOD: DeadAirFillv3 -- %1 -- Updated md.$DAFillCheckInterval to %2'.[player.age,md.$DAFillCheckInterval]" context="false" filter="scripts" chance="if @$DAFillDebugChance then ($DAFillDebugChance * 100) else 0"/>
					</actions>
				</cue>
				<cue name="DAFillMaxTSWarePercent" instantiate="true">
					<conditions>
						<event_cue_signalled/>
					</conditions>
					<actions>
						<set_value name="md.$DAFillMaxTSWarePercent" exact="event.param.$value"/>
						<debug_text text="'MOD: DeadAirFillv3 -- %1 -- Updated md.$DAFillMaxTSWarePercent to %2'.[player.age,md.$DAFillMaxTSWarePercent]" context="false" filter="scripts" chance="if @$DAFillDebugChance then ($DAFillDebugChance * 100) else 0"/>
						<do_if value="md.$DAFillMaxTSWarePercentAfter gt event.param.$value">
							<set_value name="md.$DAFillMaxTSWarePercentAfter" exact="[event.param.$value - 5.0,0.0].max"/>
							<debug_text text="'MOD: DeadAirFillv3 -- %1 -- Updated md.$DAFillMaxTSWarePercentAfter to %2'.[player.age,md.$DAFillMaxTSWarePercentAfter]" context="false" filter="scripts" chance="if @$DAFillDebugChance then ($DAFillDebugChance * 100) else 0"/>
							<signal_cue_instantly cue="md.Simple_Menu_API.Refresh_Menu"/>
						</do_if>
					</actions>
				</cue>
				<cue name="DAFillMaxTSWarePercentAfter" instantiate="true">
					<conditions>
						<event_cue_signalled/>
					</conditions>
					<actions>
						<set_value name="md.$DAFillMaxTSWarePercentAfter" exact="event.param.$value"/>
						<debug_text text="'MOD: DeadAirFillv3 -- %1 -- Updated md.$DAFillMaxTSWarePercentAfter to %2'.[player.age,md.$DAFillMaxTSWarePercentAfter]" context="false" filter="scripts" chance="if @$DAFillDebugChance then ($DAFillDebugChance * 100) else 0"/>
						<do_if value="md.$DAFillMaxTSWarePercent lt event.param.$value">
							<set_value name="md.$DAFillMaxTSWarePercent" exact="[event.param.$value + 5.0,100.0].min"/>
							<debug_text text="'MOD: DeadAirFillv3 -- %1 -- Updated md.$DAFillMaxTSWarePercent to %2'.[player.age,md.$DAFillMaxTSWarePercent]" context="false" filter="scripts" chance="if @$DAFillDebugChance then ($DAFillDebugChance * 100) else 0"/>
							<signal_cue_instantly cue="md.Simple_Menu_API.Refresh_Menu"/>
						</do_if>
					</actions>
				</cue>
				<cue name="DAFillMinTSWarePercent" instantiate="true">
					<conditions>
						<event_cue_signalled/>
					</conditions>
					<actions>
						<set_value name="md.$DAFillMinTSWarePercent" exact="event.param.$value"/>
						<debug_text text="'MOD: DeadAirFillv3 -- %1 -- Updated md.$DAFillMinTSWarePercent to %2'.[player.age,md.$DAFillMinTSWarePercent]" context="false" filter="scripts" chance="if @$DAFillDebugChance then ($DAFillDebugChance * 100) else 0"/>
						<do_if value="md.$DAFillMinTSWarePercentAfter lt event.param.$value">
							<set_value name="md.$DAFillMinTSWarePercentAfter" exact="[event.param.$value + 5.0,100.0].min"/>
							<debug_text text="'MOD: DeadAirFillv3 -- %1 -- Updated md.$DAFillMinTSWarePercentAfter to %2'.[player.age,md.$DAFillMinTSWarePercentAfter]" context="false" filter="scripts" chance="if @$DAFillDebugChance then ($DAFillDebugChance * 100) else 0"/>
							<signal_cue_instantly cue="md.Simple_Menu_API.Refresh_Menu"/>
						</do_if>
					</actions>
				</cue>
				<cue name="DAFillMinTSWarePercentAfter" instantiate="true">
					<conditions>
						<event_cue_signalled/>
					</conditions>
					<actions>
						<set_value name="md.$DAFillMinTSWarePercentAfter" exact="event.param.$value"/>
						<debug_text text="'MOD: DeadAirFillv3 -- %1 -- Updated md.$DAFillMinTSWarePercentAfter to %2'.[player.age,md.$DAFillMinTSWarePercentAfter]" context="false" filter="scripts" chance="if @$DAFillDebugChance then ($DAFillDebugChance * 100) else 0"/>
						<do_if value="md.$DAFillMinTSWarePercent gt event.param.$value">
							<set_value name="md.$DAFillMinTSWarePercent" exact="[event.param.$value - 5.0,0.0].max"/>
							<debug_text text="'MOD: DeadAirFillv3 -- %1 -- Updated md.$DAFillMinTSWarePercent to %2'.[player.age,md.$DAFillMinTSWarePercent]" context="false" filter="scripts" chance="if @$DAFillDebugChance then ($DAFillDebugChance * 100) else 0"/>
							<signal_cue_instantly cue="md.Simple_Menu_API.Refresh_Menu"/>
						</do_if>
					</actions>
				</cue>
				<cue name="DAFillMinSYWarePercent" instantiate="true">
					<conditions>
						<event_cue_signalled/>
					</conditions>
					<actions>
						<set_value name="md.$DAFillMinSYWarePercent" exact="event.param.$value"/>
						<debug_text text="'MOD: DeadAirFillv3 -- %1 -- Updated md.$DAFillMinSYWarePercent to %2'.[player.age,md.$DAFillMinSYWarePercent]" context="false" filter="scripts" chance="if @$DAFillDebugChance then ($DAFillDebugChance * 100) else 0"/>
						<do_if value="md.$DAFillMinSYWarePercentAfter lt event.param.$value">
							<set_value name="md.$DAFillMinSYWarePercentAfter" exact="[event.param.$value + 5.0,100.0].min"/>
							<debug_text text="'MOD: DeadAirFillv3 -- %1 -- Updated md.$DAFillMinSYWarePercentAfter to %2'.[player.age,md.$DAFillMinSYWarePercentAfter]" context="false" filter="scripts" chance="if @$DAFillDebugChance then ($DAFillDebugChance * 100) else 0"/>
							<signal_cue_instantly cue="md.Simple_Menu_API.Refresh_Menu"/>
						</do_if>
					</actions>
				</cue>
				<cue name="DAFillMinSYWarePercentAfter" instantiate="true">
					<conditions>
						<event_cue_signalled/>
					</conditions>
					<actions>
						<set_value name="md.$DAFillMinSYWarePercentAfter" exact="event.param.$value"/>
						<debug_text text="'MOD: DeadAirFillv3 -- %1 -- Updated md.$DAFillMinSYWarePercentAfter to %2'.[player.age,md.$DAFillMinSYWarePercentAfter]" context="false" filter="scripts" chance="if @$DAFillDebugChance then ($DAFillDebugChance * 100) else 0"/>
						<do_if value="md.$DAFillMinSYWarePercent gt event.param.$value">
							<set_value name="md.$DAFillMinSYWarePercent" exact="[event.param.$value - 5.0,0.0].max"/>
							<debug_text text="'MOD: DeadAirFillv3 -- %1 -- Updated md.$DAFillMinSYWarePercent to %2'.[player.age,md.$DAFillMinSYWarePercent]" context="false" filter="scripts" chance="if @$DAFillDebugChance then ($DAFillDebugChance * 100) else 0"/>
							<signal_cue_instantly cue="md.Simple_Menu_API.Refresh_Menu"/>
						</do_if>
					</actions>
				</cue>
			</cues>
		</cue>
	</cues>
</mdscript>
